from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton

async def handle_help(client, message):
    keyboard = InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("Archivos", callback_data="help_1")],
            [InlineKeyboardButton("Correo", callback_data="help_2")],
            [InlineKeyboardButton("Hentai", callback_data="help_3")],
            [InlineKeyboardButton("Videos", callback_data="help_4")],
            [InlineKeyboardButton("Imgchest", callback_data="help_5")]
        ]
    )
    await message.reply_text(
        "Selecciona una opci√≥n para obtener m√°s ayuda:",
        reply_markup=keyboard
    )

async def handle_help_callback(client, callback_query):
    data = callback_query.data

    if data == "help_1":
        await callback_query.message.edit_text(
            """
üìÅ *Archivos*

Responda a un mensaje y escriba los siguientes comandos:

`/compress` ‚Äî Comprime el archivo en partes 7z  
`/rename: NuevoNombre.ext` ‚Äî Cambia el nombre del archivo  
`/setsize 10` ‚Äî Cambia el tama√±o en MB de las partes en que `\\compress` dividir√° su archivo
            """,
            reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton("Volver", callback_data="help_back")]]
            )
        )
        await callback_query.answer("Mostrando Ayuda de Archivos")

    elif data == "help_2":
        await callback_query.message.edit_text(
            """
üìß *Correo*

Comandos disponibles para enviar archivos desde Telegram a tu correo.  
Los archivos se autocomprimen si son muy grandes:

`/setmail micorreo@ejemplo.com` ‚Äî Establece tu direcci√≥n de correo  
`/access C√≥digo` ‚Äî Verifica tu correo (opcional para usuarios de confianza)  
`/sendmail` ‚Äî Escribe este comando respondiendo al mensaje que deseas enviar  
`/setmb 20` ‚Äî Establece el tama√±o m√°ximo en MB para la compresi√≥n autom√°tica (m√°ximo: 20)
            """,
            reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton("Volver", callback_data="help_back")]]
            )
        )
        await callback_query.answer("Mostrando Ayuda de Correo")

    elif data == "help_3":
        await callback_query.message.edit_text(
            """
üîû *Hentai*

El bot puede recopilar im√°genes desde Nhentai y 3Hentai y enviarlas como archivo CBZ:

`/nh C√≥digo` ‚Äî Descarga el contenido de Nhentai  
`/3h C√≥digo` ‚Äî Descarga el contenido de 3Hentai  
`/covernh C√≥digo` ‚Äî Env√≠a la portada del archivo Nhentai  
`/cover3h C√≥digo` ‚Äî Env√≠a la portada del archivo 3Hentai
            """,
            reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton("Volver", callback_data="help_back")]]
            )
        )
        await callback_query.answer("Mostrando Ayuda de Hentai")

    elif data == "help_4":
        await callback_query.message.edit_text(
            """
üé¨ *Videos*

Opciones disponibles para manejo de videos:

`/convert` ‚Äî Convierte el video  
`/calidad` ‚Äî Edita los valores de conversi√≥n (sin argumentos muestra ejemplos)  
`/cancel ID_Tarea` ‚Äî Cancela una tarea (solo admins o creador)  
`/list` ‚Äî Muestra la cola de tareas (solo admins y usuarios VIP)
            """,
            reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton("Volver", callback_data="help_back")]]
            )
        )
        await callback_query.answer("Mostrando Ayuda de Videos")

    elif data == "help_5":
        await callback_query.message.edit_text(
            """
üñºÔ∏è *Imgchest*

Permite almacenar im√°genes en l√≠nea usando el servicio Imgchest:

`/imgchest` ‚Äî Responde a una imagen con este comando para subirla y recibir el enlace
            """,
            reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton("Volver", callback_data="help_back")]]
            )
        )
        await callback_query.answer("Mostrando Ayuda Imgchest")

    elif data == "help_6":
        await callback_query.message.edit_text(
            "Texto de Ayuda 6:\nExplicaci√≥n relacionada con la tercera opci√≥n.",
            reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton("Volver", callback_data="help_back")]]
            )
        )
        await callback_query.answer("Mostrando Ayuda 6.")

    elif data == "help_back":
        await callback_query.message.edit_text(
            "Selecciona una opci√≥n para obtener m√°s ayuda:",
            reply_markup=InlineKeyboardMarkup(
                [
                    [InlineKeyboardButton("Archivos", callback_data="help_1")],
                    [InlineKeyboardButton("Correo", callback_data="help_2")],
                    [InlineKeyboardButton("Hentai", callback_data="help_3")],
                    [InlineKeyboardButton("Videos", callback_data="help_4")],
                    [InlineKeyboardButton("Imgchest", callback_data="help_5")]
                ]
            )
        )
        await callback_query.answer("Regresando al men√∫ principal.")
